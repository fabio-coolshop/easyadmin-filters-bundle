{% block filters %}
	<div class="global-actions">
		{% set _action = easyadmin_get_action_for_list_view('search', _entity_config.name) %}
		<form id="filters_form" method="get" action="{{ path('easyadmin') }}">
			<div class="row" id="filters-row">

				<!-- Filtri -->
				<div class="col-lg-9 col-md-8 col-sm-12">
					<div class="row">
						<input type="hidden" name="action" value="search">
						<input type="hidden" name="entity" value="{{ _request_parameters.entity }}">
						<input type="hidden" name="sortField" value="{{ _request_parameters.sortField }}">
						<input type="hidden" name="sortDirection" value="{{ _request_parameters.sortDirection }}">
						<input type="hidden" name="menuIndex" value="{{ _request_parameters.menuIndex }}">
						<input type="hidden" name="submenuIndex" value="{{ _request_parameters.submenuIndex }}">

						{% for block in filters %}
							{% with block %}

								{% if block(type) is not defined %}
									{% set type = 'text' %}
								{% endif %}

								{% set id = uniqid(type) %}

								{{ block(type) }}

							{% endwith %}
						{% endfor %}

					</div>
				</div>
				<!-- END: Filtri -->

				<!-- Button SEARCH -->
				<div class="col-lg-3 col-md-4 col-sm-12 header-actions">
					<div class="filter-label">&nbsp;</div>

					{% if easyadmin_action_is_enabled_for_list_view('new', _entity_config.name) %}
						{% set _action = easyadmin_get_action_for_list_view('new', _entity_config.name) %}
						{% block new_action %}
							<a class="{{ _action.css_class|default('') }}" href="{{ path('easyadmin', _request_parameters|merge({ action: _action.name })) }}" target="{{ _action.target }}">
								{% if _action.icon %}<i class="fa fa-{{ _action.icon }}"></i>{% endif %}
								New entry
							</a>
						{% endblock new_action %}
					{% endif %}

					{% if easyadmin_action_is_enabled_for_list_view('search', _entity_config.name) %}
						{% set _action = easyadmin_get_action_for_list_view('search', _entity_config.name) %}
						<button class="btn" type="submit" formtarget="{{ _action.target }}">
							<i class="fa fa-search"></i>
							<span class="hidden-xs hidden-sm">{{ _action.label|default('action.search')|trans(_trans_parameters) }}</span>
						</button>
					{% endif %}

				</div>
				<!-- END: Button SEARCH -->

			</div>
		</form>
	</div>
{% endblock filters %}

{% block datetime %}

	{% if size < 3 %}
		{% set size = 3 %}
	{% endif %}

	<div class="col-lg-{{ size }} col-md-4 col-sm-6 filter-field filter-field-datetime" id="filter-{{ property }}">
		<div class="filter-field-label">{{ property }}</div>
		<div class="filter-field-datetime-start">
			<div>
				<input autocomplete="off" data-date-format="DD-MM-YYYY HH:mm" class="form-control datetimepicker" name="query[{{ property }}][start]" value="{{ app.request.get('query')[property]['start']|default('') }}" placeholder="{{ 'start_date' | trans }}">
			</div>
		</div>
		<div class="filter-field-datetime-icon">
			<i class="fa fa-calendar" aria-hidden="true"></i>
		</div>
		<div class="filter-field-datetime-end">
			<div>
				<input autocomplete="off" data-date-format="DD-MM-YYYY HH:mm" class="form-control datetimepicker" name="query[{{ property }}][end]" value="{{ app.request.get('query')[property]['end']|default('') }}" placeholder="{{ 'end_date' | trans }}">
			</div>
		</div>
	</div>

	<script>
		$(document).ready(function(){
			$('#filter-{{ property }} input').on('dp.change',function(event){
				if($(this).find('+div').length){
					setTimeout(function($input){
						$input.trigger('blur');
						$input.parents('form').submit();
					},200,$(this));
				}
			});
		});
	</script>

{% endblock %}

{% block choice %}

	{% set async = async|default(false) %}
	{% set type_options = {theme:'bootstrap',placeholder:'Search in '~property|humanize}|merge(type_options) %}
	{% set label = label|default('') %}
	{% set value = app.request.get('query')[property]|default('') %}

	{% if not async %}
		{% if choices is function %}
			{% set options = call(choices) %}
		{% elseif choices is array %}
			{% set options = choices %}
		{% elseif choices is property %}
			{% set options = findAll(choices,key|default('id')) %}
		{% elseif choices is class %}
			{% set options = findAll(choices,key|default('id'),label) %}
		{% elseif choices is string %}
			{% set options = call_static(_entity_config.class,choices) %}
		{% endif %}
		{% set type_options = {minimumResultsForSearch:-1}|merge(type_options) %}
	{% else %}
		{% set type_options = {entity:_entity_config.name,action:'ajaxsearch',minimumInputLength:3}|merge(type_options) %}
	{% endif %}

	<div class="col-lg-{{ size }} col-md-4 col-sm-6 filter-field">
		<div class="filter-label">{{ property | trans }}</div>
		<select class="form-control" name="query[{{ property }}]" id="{{ id }}" {{ flatAttributes({data:type_options}) }} {{ flatAttributes(attr) }}>

			{% if async and value %}
				<option value="{{ value }}" selected>{{ findOneBy(choices,value) }}</option>
			{% else %}
				<option value=""></option>
			{% endif %}

			{% for id,label in options|default([]) %}

				{% if key is not defined %}
					{% set vkey = label %}
				{% else %}
					{% set vkey = id %}
				{% endif %}

				{% if choices is array %}
					{% set vkey = label %}
					{% set label = id %}
				{% endif %}

				<option value="{{ vkey }}" data-data="{{ vkey }}" {% if vkey|length == value|length and (vkey == value or key is defined and vkey == value) %}selected{% endif %}>{{ label | trans }}</option>

			{% endfor %}

		</select>
	</div>

	<script>
		(function($){
			$(document).ready(function(){

				var $elem = $('#{{ id }}');
				var options = $elem.data();
				var config = {
					allowClear: true,
				};

				{% if choices is property or choices is class %}

					if(options.entity && options.action){
						config.ajax = {
							delay:1000,
							url:document.location.pathname,
							dataType:'json',
							data:function(params){
								return {
									entity:options.entity,
									action:options.action,
									key:"{{ key|default('id') }}",
									label:"{{ label }}",
									target:'{{ choices|replace({'\\':'\\\\'}) }}',
									query:params.term
								};
							},
							processResults:function(data,params){
								return {
									results:data
								};
							}
						};
						config.escapeMarkup = function(markup){
							return markup;
						}
					}

				{% endif %}

				var value = true;

				$elem.select2(config).on('change',function(){
					value = $(this).val();
					$(this).parents('form').submit();
				}).on('select2:opening',function(){
					if(!value){
						return false;
					}
				});

			});
		})(jQuery);
	</script>

{% endblock %}

{% block text %}

	<div class="col-lg-{{ size }} col-md-4 col-sm-6">
		<div class="filter-label">{{ property | trans }}</div>
		<input type="text" class="form-control" name="query[{{ property }}]" value="{{ app.request.get('query')[property]|default('') }}"/>
	</div>

{% endblock %}
